package main

import (
	"fmt"
	"sync"
)

//Програма моделює обслуговування двох потоків процесів з різними параметрами одним центральним процесором і трьома чергами.
//Якщо згенеровано процес другого потоку і процесор занятий, процес надходить в другу чергу.
//Якщо згенеровано процес першого потоку, то, якщо процесор обробляє процес другого потоку,
//процес другого потоку призупиняється і поміщається в третю чергу (з часом, що залишився на обробку).
//Якщо процесор обробляє процес першого потоку, то процес надходить в першу чергу.
//При звільнені процесора черги проглядаються в наступному порядку: перша черга, третя черга, друга черга.
//Визначити максимальну довжину черг і кількість перерваних процесів другого потоку.

type Scheduler struct {
	G1 Generator
	G2 Generator
}

type Processor struct {
	S  Scheduler
	Q1 Queue
	Q2 Queue
	Q3 Queue
}

type Process struct {
	ID   int64
	data any
}

type Generator struct {
	Mu      sync.Mutex
	counter int64
}

type Queue struct {
	q chan Process
}

func main() {
	fmt.Println("")
}
